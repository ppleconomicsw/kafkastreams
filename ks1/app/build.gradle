/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'
    implementation 'com.google.guava:guava:31.1-jre'
    implementation 'com.github.javafaker:javafaker:1.0.2'
    implementation group: 'org.apache.kafka', name: 'kafka-streams', version: '3.4.0'
    implementation 'org.apache.kafka:kafka-clients:3.4.0'
}

application {
    // Define the main class for the application.
    mainClass = 'com.kafkastreams.ks1.Ks1'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}



tasks.register('m', JavaExec) {
    mainClass = 'com.kafkastreams.ks1.StringProducer'
    classpath sourceSets.main.runtimeClasspath
    args=['configuration/dev.properties']
}

tasks.register('s', JavaExec) {
    mainClass = 'com.kafkastreams.ks1.Ks1'
    classpath sourceSets.main.runtimeClasspath
    args=['configuration/dev.properties']
}

tasks.register('CreateDirectory') {
    // Store target directory into a variable to avoid project reference in the configuration cache
    // def directory = file("images")

    doLast {
        mkdir "$projectDir/src/main/json"
        mkdir "$projectDir/configuration"
        mkdir "$projectDir/scripts"
        mkdir "$projectDir/src/main/resources/json"
    }
}